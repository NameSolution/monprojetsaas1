datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(uuid())
  tenantId     Int
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  profile      Profile?
  supportTickets SupportTicket[]
}

model Profile {
  id        String   @id
  tenantId  Int
  name      String
  role      String   @default("client")
  hotel     Hotel?   @relation(fields: [hotelId], references: [id])
  hotelId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [id], references: [id])
}

model Hotel {
  id              String          @id @default(uuid())
  tenantId        Int
  name            String
  description     String?
  logoUrl         String?
  defaultLangCode String          @default("en")
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  profiles        Profile[]
  hotelLanguages  HotelLanguage[]
}

model HotelLanguage {
  id        String  @id @default(uuid())
  tenantId  Int
  hotel     Hotel   @relation(fields: [hotelId], references: [id])
  hotelId   String
  langCode  String
  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
  @@unique([hotelId, langCode])
}

model SupportTicket {
  id        String   @id @default(uuid())
  tenantId  Int
  title     String
  description String?
  status    String   @default("open")
  priority  String   @default("medium")
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubscriptionPlan {
  id        String   @id @default(uuid())
  tenantId  Int
  name      String
  price     Decimal
  features  Json?
  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
}

model Language {
  code String @id
  tenantId Int
  name String
}
